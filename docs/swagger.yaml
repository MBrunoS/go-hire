basePath: /api/v1
definitions:
  dto.CreateJobInputDTO:
    properties:
      company:
        type: string
      description:
        type: string
      location:
        type: string
      remote:
        type: boolean
      salary:
        type: integer
      title:
        type: string
    type: object
  dto.CreateUserInputDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.ErrorOutputDTO:
    properties:
      error:
        type: string
    type: object
  dto.JobOutputDTO:
    properties:
      company:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      location:
        type: string
      remote:
        type: boolean
      salary:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.LoginInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UpdateJobInputDTO:
    properties:
      company:
        type: string
      description:
        type: string
      location:
        type: string
      remote:
        type: boolean
      salary:
        type: integer
      title:
        type: string
    type: object
  dto.UpdateUserInputDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.UserOutputDTO:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  dto.UserWithTokenOutputDTO:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: contact@mbrunos.dev
    name: Maur√≠cio Bruno da Silva
    url: https://mbrunos.dev
  description: This is a simple API for managing job offers and users.
  title: Go Hire API
  version: "1"
paths:
  /jobs:
    get:
      description: List Jobs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.JobOutputDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      summary: "List \tJobs"
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Create Job
      parameters:
      - description: Job data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateJobInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.JobOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      security:
      - ApiKeyAuth: []
      summary: Create Job
      tags:
      - jobs
  /jobs/{id}:
    delete:
      description: Delete Job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      security:
      - ApiKeyAuth: []
      summary: Delete Job
      tags:
      - jobs
    get:
      description: Get Job by ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JobOutputDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      summary: Get Job
      tags:
      - jobs
    put:
      consumes:
      - application/json
      description: Update Job
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: Job data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateJobInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.JobOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      security:
      - ApiKeyAuth: []
      summary: Update Job
      tags:
      - jobs
  /login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserWithTokenOutputDTO'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      summary: Login User
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      summary: Creates a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      security:
      - ApiKeyAuth: []
      summary: Deletes a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorOutputDTO'
      security:
      - ApiKeyAuth: []
      summary: Updates a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
